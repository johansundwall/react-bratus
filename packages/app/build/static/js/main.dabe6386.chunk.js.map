{"version":3,"sources":["locales lazy /^/.//.*//messages/.js$/ groupOptions: {} namespace object","utils/locale.js","hooks/useLocale.js","providers/I18nWatchLocaleProvider.js","providers/ThemeProvider.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","locale","a","messages","i18n","load","activate","LOCAL_STORAGE_KEY","useLocale","useState","localStorage","getItem","navigator","languages","language","userLanguage","split","setLocale","updateLocale","value","setItem","loadLocaleData","plurals","en","da","I18nWatchLocaleProvider","children","useLingui","propTypes","PropTypes","any","THEME","primary","secondary","ThemeProvider","theme","App","elements","setElements","StyledDiv","styled","div","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","useEffect","fetch","res","json","data","direction","isHorizontal","setGraph","rankdir","forEach","el","isNode","setNode","width","height","setEdge","source","target","layout","nodeWithPosition","node","targetPosition","sourcePosition","position","x","Math","random","y","nodeHeight","getLayoutedElements","concat","nodes","edges","catch","console","log","connectionLineType","onElementClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dabe6386.chunk.js","sourcesContent":["var map = {\n\t\"./da/messages.js\": [\n\t\t345,\n\t\t3\n\t],\n\t\"./en/messages.js\": [\n\t\t346,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 338;\nmodule.exports = webpackAsyncContext;","import { i18n } from '@lingui/core';\n\nexport const getUserLocale = () => {\n  // Returns \"en-GB\"\n  const languageCode =\n    (navigator.languages && navigator.languages[0]) ||\n    navigator.language ||\n    navigator.userLanguage;\n\n  // Returns \"en\"\n  return languageCode.split('-')[0];\n};\n\nexport async function activate(locale) {\n  const { messages } = await import(`../locales/${locale}/messages.js`);\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n","import { useState } from 'react';\n\nimport { getUserLocale } from '../utils';\n\nconst LOCAL_STORAGE_KEY = 'escooter-reporter:settings:locale';\n\nconst useLocale = () => {\n  const [locale, setLocale] = useState(\n    localStorage.getItem(LOCAL_STORAGE_KEY) ?? getUserLocale()\n  );\n\n  const updateLocale = (value) => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, value);\n    setLocale(value);\n  };\n\n  return { locale, updateLocale };\n};\n\nexport default useLocale;\n","import { i18n } from '@lingui/core';\nimport { useLingui } from '@lingui/react';\nimport { da, en } from 'make-plural/plurals';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\ni18n.loadLocaleData('en', { plurals: en });\ni18n.loadLocaleData('da', { plurals: da });\n\nconst I18nWatchLocaleProvider = ({ children }) => {\n  const { i18n } = useLingui();\n\n  // Skip render when locale isn't loaded\n  if (!i18n.locale) return null;\n\n  // Force re-render when locale changes. Otherwise translations won't be updated.\n  return <>{children}</>;\n};\n\nI18nWatchLocaleProvider.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default I18nWatchLocaleProvider;\n","import React from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\n\nconst THEME = {\n  primary: '#3e3e3e',\n  secondary: '#000000',\n};\n\nconst ThemeProvider = ({ children }) => {\n  return <StyledThemeProvider theme={THEME}>{children}</StyledThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport dagre from 'dagre';\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { isNode } from 'react-flow-renderer';\nimport styled from 'styled-components';\n\nimport useLocale from './hooks/useLocale';\nimport I18nWatchLocaleProvider from './providers/I18nWatchLocaleProvider';\nimport ThemeProvider from './providers/ThemeProvider';\nimport { activate } from './utils';\nconst App = () => {\n  const { locale } = useLocale();\n  const [elements, setElements] = useState(null);\n\n  const StyledDiv = styled.div`\n    height: 100vh;\n  `;\n  const dagreGraph = new dagre.graphlib.Graph();\n  dagreGraph.setDefaultEdgeLabel(() => ({}));\n\n  // In order to keep this example simple the node width and height are hardcoded.\n  // In a real world app you would use the correct width and height values of\n  // const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\n\n  const nodeWidth = 172;\n  const nodeHeight = 36;\n  const getLayoutedElements = (elements, direction = 'LR') => {\n    const isHorizontal = direction === 'LR';\n    dagreGraph.setGraph({ rankdir: direction });\n\n    elements.forEach((el) => {\n      if (isNode(el)) {\n        dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\n      } else {\n        dagreGraph.setEdge(el.source, el.target);\n      }\n    });\n\n    dagre.layout(dagreGraph);\n\n    return elements.map((el) => {\n      if (isNode(el)) {\n        const nodeWithPosition = dagreGraph.node(el.id);\n        el.targetPosition = isHorizontal ? 'left' : 'top';\n        el.sourcePosition = isHorizontal ? 'right' : 'bottom';\n\n        // unfortunately we need this little hack to pass a slighltiy different position\n        // to notify react flow about the change. More over we are shifting the dagre node position\n        // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\n        el.position = {\n          x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\n          y: nodeWithPosition.y - nodeHeight / 2,\n        };\n      }\n\n      return el;\n    });\n  };\n\n  useEffect(() => {\n    activate(locale);\n    fetch('http://localhost:3000/data')\n      .then((res) => res.json())\n      .then((data) => {\n        setElements(getLayoutedElements([].concat(data.nodes, data.edges)));\n      })\n      .catch(console.log);\n  }, [locale]);\n\n  const test = (e, node) => console.log(node);\n  return (\n    <I18nProvider i18n={i18n}>\n      <I18nWatchLocaleProvider>\n        <ThemeProvider>\n          <StyledDiv>\n            {elements && (\n              <ReactFlow\n                elements={elements}\n                connectionLineType=\"smoothstep\"\n                onElementClick={test}\n              />\n            )}\n          </StyledDiv>\n        </ThemeProvider>\n      </I18nWatchLocaleProvider>\n    </I18nProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}